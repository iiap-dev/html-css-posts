@use 'sass:map';
@use './functions' as *;

$breakpoints: (
  'mobile': (max-width: rem(768)),
  'tablet': (min-width: rem(768)) and (max-width: rem(1023)),
  'tablet-up': (min-width: rem(768)),
  'laptop': (min-width: rem(1024)) and (max-width: rem(1439)),
  'laptop-up': (min-width: rem(1024)),
  'desktop': (min-width: rem(1440)),
);

@mixin media($queries) {
  @if length($queries) == 0 {
    @content;
  } @else {
    $first-key: nth(map-keys($queries), 1);

    @media ($first-key: map-get($queries, $first-key)) {
      $queries: map-remove($queries, $first-key);

      @include media($queries) {
        @content;
      }
    }
  }
}

@mixin query($breakpoint) {
  $queries: map-get($breakpoints, $breakpoint);

  @if not $queries {
    @error "No value could be retrieved from `#{$breakpoint}`. "
    + "Please make sure it is defined in `$breakpoints` map.";
  }

  @include media($queries) {
    @content;
  }
}

@mixin hover-firefox {
  @media (-moz-touch-enabled: 0) {
    @content;
  }
}

@mixin transform($property) {
  transform: $property;
  -webkit-transform: $property;
  -moz-transform: $property;
  -ms-transform: $property;
}

@mixin root-vars($map, $prefix) {
  @each $name, $value in $map {
    #{'--' + $prefix + '-' + $name}: $value;
  }
}

@mixin font($font-size: null, $font-weight: null, $line-height: null, $font-family: 'Roboto') {
  font: normal #{$font-weight} #{$font-size} / #{$line-height} #{$font-family}, serif; 
};

@mixin transition($transition: all, $duration: 0.2s, $type: ease) {
  transition: $transition $duration $type;
}